package com.opengamma.financial.security.irs;

import org.joda.beans.BeanDefinition;
import org.joda.beans.ImmutableBean;
import org.joda.beans.Property;
import org.joda.beans.PropertyDefinition;

import com.opengamma.analytics.math.interpolation.Interpolator;
import com.opengamma.financial.convention.StubType;
import com.opengamma.util.time.Tenor;

import java.util.Map;
import org.joda.beans.Bean;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;
import java.util.NoSuchElementException;
import java.util.Set;
import org.joda.beans.impl.BasicImmutableBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaBean;
import org.threeten.bp.LocalDate;

/**
 * Stub (front and short supported) properties.
 */
@BeanDefinition
public final class StubCalculationMethod implements ImmutableBean {

  /**
   * The stub type.
   */
  @PropertyDefinition(validate = "notNull")
  private final StubType _type;

  /**
   * Stub (optional) interpolator.
   */
  @PropertyDefinition()
  private final Interpolator _stubInterpolation;

  /**
   * The first stub stub rate.
   */
  @PropertyDefinition(validate = "notNull")
  private final double _firstStubRate;

  /**
   * The date at which the first stub ceases and regular payments begin.
   */
  @PropertyDefinition(validate = "notNull")
  private final LocalDate _firstStubEndDate;


  /**
   *  The start index of the first stub.
   */
  @PropertyDefinition(validate = "notNull")
  private final Tenor _firstStubStartIndex;

  /**
   *  The end index of the first stub.
   */
  @PropertyDefinition(validate = "notNull")
  private final Tenor _firstStubEndIndex;

  /**
   *  The start index of the final stub.
   */
  @PropertyDefinition(validate = "notNull")
  private final Tenor _finalStubStartIndex;

  /**
   *  The end index of the final stub.
   */
  @PropertyDefinition(validate = "notNull")
  private final Tenor _finalStubEndIndex;

  //------------------------- AUTOGENERATED START -------------------------
  ///CLOVER:OFF
  /**
   * The meta-bean for {@code StubCalculationMethod}.
   * @return the meta-bean, not null
   */
  public static StubCalculationMethod.Meta meta() {
    return StubCalculationMethod.Meta.INSTANCE;
  }

  static {
    JodaBeanUtils.registerMetaBean(StubCalculationMethod.Meta.INSTANCE);
  }

  /**
   * Returns a builder used to create an instance of the bean.
   *
   * @return the builder, not null
   */
  public static StubCalculationMethod.Builder builder() {
    return new StubCalculationMethod.Builder();
  }

  private StubCalculationMethod(
      StubType type,
      Interpolator stubInterpolation,
      double firstStubRate,
      LocalDate firstStubEndDate,
      Tenor firstStubStartIndex,
      Tenor firstStubEndIndex,
      Tenor finalStubStartIndex,
      Tenor finalStubEndIndex) {
    JodaBeanUtils.notNull(type, "type");
    JodaBeanUtils.notNull(firstStubRate, "firstStubRate");
    JodaBeanUtils.notNull(firstStubEndDate, "firstStubEndDate");
    JodaBeanUtils.notNull(firstStubStartIndex, "firstStubStartIndex");
    JodaBeanUtils.notNull(firstStubEndIndex, "firstStubEndIndex");
    JodaBeanUtils.notNull(finalStubStartIndex, "finalStubStartIndex");
    JodaBeanUtils.notNull(finalStubEndIndex, "finalStubEndIndex");
    this._type = type;
    this._stubInterpolation = stubInterpolation;
    this._firstStubRate = firstStubRate;
    this._firstStubEndDate = firstStubEndDate;
    this._firstStubStartIndex = firstStubStartIndex;
    this._firstStubEndIndex = firstStubEndIndex;
    this._finalStubStartIndex = finalStubStartIndex;
    this._finalStubEndIndex = finalStubEndIndex;
  }

  @Override
  public StubCalculationMethod.Meta metaBean() {
    return StubCalculationMethod.Meta.INSTANCE;
  }

  @Override
  public <R> Property<R> property(String propertyName) {
    return metaBean().<R>metaProperty(propertyName).createProperty(this);
  }

  @Override
  public Set<String> propertyNames() {
    return metaBean().metaPropertyMap().keySet();
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the stub type.
   * @return the value of the property, not null
   */
  public StubType getType() {
    return _type;
  }

  //-----------------------------------------------------------------------
  /**
   * Gets stub (optional) interpolator.
   * @return the value of the property
   */
  public Interpolator getStubInterpolation() {
    return _stubInterpolation;
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the first stub stub rate.
   * @return the value of the property, not null
   */
  public double getFirstStubRate() {
    return _firstStubRate;
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the date at which the first stub ceases and regular payments begin.
   * @return the value of the property, not null
   */
  public LocalDate getFirstStubEndDate() {
    return _firstStubEndDate;
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the start index of the first stub.
   * @return the value of the property, not null
   */
  public Tenor getFirstStubStartIndex() {
    return _firstStubStartIndex;
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the end index of the first stub.
   * @return the value of the property, not null
   */
  public Tenor getFirstStubEndIndex() {
    return _firstStubEndIndex;
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the start index of the final stub.
   * @return the value of the property, not null
   */
  public Tenor getFinalStubStartIndex() {
    return _finalStubStartIndex;
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the end index of the final stub.
   * @return the value of the property, not null
   */
  public Tenor getFinalStubEndIndex() {
    return _finalStubEndIndex;
  }

  //-----------------------------------------------------------------------
  /**
   * Returns a builder that allows this bean to be mutated.
   * @return the mutable builder, not null
   */
  public Builder toBuilder() {
    return new Builder(this);
  }

  @Override
  public StubCalculationMethod clone() {
    return this;
  }

  @Override
  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (obj != null && obj.getClass() == this.getClass()) {
      StubCalculationMethod other = (StubCalculationMethod) obj;
      return JodaBeanUtils.equal(getType(), other.getType()) &&
          JodaBeanUtils.equal(getStubInterpolation(), other.getStubInterpolation()) &&
          JodaBeanUtils.equal(getFirstStubRate(), other.getFirstStubRate()) &&
          JodaBeanUtils.equal(getFirstStubEndDate(), other.getFirstStubEndDate()) &&
          JodaBeanUtils.equal(getFirstStubStartIndex(), other.getFirstStubStartIndex()) &&
          JodaBeanUtils.equal(getFirstStubEndIndex(), other.getFirstStubEndIndex()) &&
          JodaBeanUtils.equal(getFinalStubStartIndex(), other.getFinalStubStartIndex()) &&
          JodaBeanUtils.equal(getFinalStubEndIndex(), other.getFinalStubEndIndex());
    }
    return false;
  }

  @Override
  public int hashCode() {
    int hash = getClass().hashCode();
    hash += hash * 31 + JodaBeanUtils.hashCode(getType());
    hash += hash * 31 + JodaBeanUtils.hashCode(getStubInterpolation());
    hash += hash * 31 + JodaBeanUtils.hashCode(getFirstStubRate());
    hash += hash * 31 + JodaBeanUtils.hashCode(getFirstStubEndDate());
    hash += hash * 31 + JodaBeanUtils.hashCode(getFirstStubStartIndex());
    hash += hash * 31 + JodaBeanUtils.hashCode(getFirstStubEndIndex());
    hash += hash * 31 + JodaBeanUtils.hashCode(getFinalStubStartIndex());
    hash += hash * 31 + JodaBeanUtils.hashCode(getFinalStubEndIndex());
    return hash;
  }

  @Override
  public String toString() {
    StringBuilder buf = new StringBuilder(288);
    buf.append("StubCalculationMethod{");
    buf.append("type").append('=').append(getType()).append(',').append(' ');
    buf.append("stubInterpolation").append('=').append(getStubInterpolation()).append(',').append(' ');
    buf.append("firstStubRate").append('=').append(getFirstStubRate()).append(',').append(' ');
    buf.append("firstStubEndDate").append('=').append(getFirstStubEndDate()).append(',').append(' ');
    buf.append("firstStubStartIndex").append('=').append(getFirstStubStartIndex()).append(',').append(' ');
    buf.append("firstStubEndIndex").append('=').append(getFirstStubEndIndex()).append(',').append(' ');
    buf.append("finalStubStartIndex").append('=').append(getFinalStubStartIndex()).append(',').append(' ');
    buf.append("finalStubEndIndex").append('=').append(JodaBeanUtils.toString(getFinalStubEndIndex()));
    buf.append('}');
    return buf.toString();
  }

  //-----------------------------------------------------------------------
  /**
   * The meta-bean for {@code StubCalculationMethod}.
   */
  public static final class Meta extends DirectMetaBean {
    /**
     * The singleton instance of the meta-bean.
     */
    static final Meta INSTANCE = new Meta();

    /**
     * The meta-property for the {@code type} property.
     */
    private final MetaProperty<StubType> _type = DirectMetaProperty.ofImmutable(
        this, "type", StubCalculationMethod.class, StubType.class);
    /**
     * The meta-property for the {@code stubInterpolation} property.
     */
    private final MetaProperty<Interpolator> _stubInterpolation = DirectMetaProperty.ofImmutable(
        this, "stubInterpolation", StubCalculationMethod.class, Interpolator.class);
    /**
     * The meta-property for the {@code firstStubRate} property.
     */
    private final MetaProperty<Double> _firstStubRate = DirectMetaProperty.ofImmutable(
        this, "firstStubRate", StubCalculationMethod.class, Double.TYPE);
    /**
     * The meta-property for the {@code firstStubEndDate} property.
     */
    private final MetaProperty<LocalDate> _firstStubEndDate = DirectMetaProperty.ofImmutable(
        this, "firstStubEndDate", StubCalculationMethod.class, LocalDate.class);
    /**
     * The meta-property for the {@code firstStubStartIndex} property.
     */
    private final MetaProperty<Tenor> _firstStubStartIndex = DirectMetaProperty.ofImmutable(
        this, "firstStubStartIndex", StubCalculationMethod.class, Tenor.class);
    /**
     * The meta-property for the {@code firstStubEndIndex} property.
     */
    private final MetaProperty<Tenor> _firstStubEndIndex = DirectMetaProperty.ofImmutable(
        this, "firstStubEndIndex", StubCalculationMethod.class, Tenor.class);
    /**
     * The meta-property for the {@code finalStubStartIndex} property.
     */
    private final MetaProperty<Tenor> _finalStubStartIndex = DirectMetaProperty.ofImmutable(
        this, "finalStubStartIndex", StubCalculationMethod.class, Tenor.class);
    /**
     * The meta-property for the {@code finalStubEndIndex} property.
     */
    private final MetaProperty<Tenor> _finalStubEndIndex = DirectMetaProperty.ofImmutable(
        this, "finalStubEndIndex", StubCalculationMethod.class, Tenor.class);
    /**
     * The meta-properties.
     */
    private final Map<String, MetaProperty<?>> _metaPropertyMap$ = new DirectMetaPropertyMap(
        this, null,
        "type",
        "stubInterpolation",
        "firstStubRate",
        "firstStubEndDate",
        "firstStubStartIndex",
        "firstStubEndIndex",
        "finalStubStartIndex",
        "finalStubEndIndex");

    /**
     * Restricted constructor.
     */
    protected Meta() {
    }

    @Override
    protected MetaProperty<?> metaPropertyGet(String propertyName) {
      switch (propertyName.hashCode()) {
        case 3575610:  // type
          return _type;
        case 1267461014:  // stubInterpolation
          return _stubInterpolation;
        case -579843714:  // firstStubRate
          return _firstStubRate;
        case 1938251211:  // firstStubEndDate
          return _firstStubEndDate;
        case 1932095406:  // firstStubStartIndex
          return _firstStubStartIndex;
        case -38764971:  // firstStubEndIndex
          return _firstStubEndIndex;
        case -2056975372:  // finalStubStartIndex
          return _finalStubStartIndex;
        case 1083339803:  // finalStubEndIndex
          return _finalStubEndIndex;
      }
      return super.metaPropertyGet(propertyName);
    }

    @Override
    public StubCalculationMethod.Builder builder() {
      return new StubCalculationMethod.Builder();
    }

    @Override
    public Class<? extends StubCalculationMethod> beanType() {
      return StubCalculationMethod.class;
    }

    @Override
    public Map<String, MetaProperty<?>> metaPropertyMap() {
      return _metaPropertyMap$;
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-property for the {@code type} property.
     * @return the meta-property, not null
     */
    public MetaProperty<StubType> type() {
      return _type;
    }

    /**
     * The meta-property for the {@code stubInterpolation} property.
     * @return the meta-property, not null
     */
    public MetaProperty<Interpolator> stubInterpolation() {
      return _stubInterpolation;
    }

    /**
     * The meta-property for the {@code firstStubRate} property.
     * @return the meta-property, not null
     */
    public MetaProperty<Double> firstStubRate() {
      return _firstStubRate;
    }

    /**
     * The meta-property for the {@code firstStubEndDate} property.
     * @return the meta-property, not null
     */
    public MetaProperty<LocalDate> firstStubEndDate() {
      return _firstStubEndDate;
    }

    /**
     * The meta-property for the {@code firstStubStartIndex} property.
     * @return the meta-property, not null
     */
    public MetaProperty<Tenor> firstStubStartIndex() {
      return _firstStubStartIndex;
    }

    /**
     * The meta-property for the {@code firstStubEndIndex} property.
     * @return the meta-property, not null
     */
    public MetaProperty<Tenor> firstStubEndIndex() {
      return _firstStubEndIndex;
    }

    /**
     * The meta-property for the {@code finalStubStartIndex} property.
     * @return the meta-property, not null
     */
    public MetaProperty<Tenor> finalStubStartIndex() {
      return _finalStubStartIndex;
    }

    /**
     * The meta-property for the {@code finalStubEndIndex} property.
     * @return the meta-property, not null
     */
    public MetaProperty<Tenor> finalStubEndIndex() {
      return _finalStubEndIndex;
    }

    //-----------------------------------------------------------------------
    @Override
    protected Object propertyGet(Bean bean, String propertyName, boolean quiet) {
      switch (propertyName.hashCode()) {
        case 3575610:  // type
          return ((StubCalculationMethod) bean).getType();
        case 1267461014:  // stubInterpolation
          return ((StubCalculationMethod) bean).getStubInterpolation();
        case -579843714:  // firstStubRate
          return ((StubCalculationMethod) bean).getFirstStubRate();
        case 1938251211:  // firstStubEndDate
          return ((StubCalculationMethod) bean).getFirstStubEndDate();
        case 1932095406:  // firstStubStartIndex
          return ((StubCalculationMethod) bean).getFirstStubStartIndex();
        case -38764971:  // firstStubEndIndex
          return ((StubCalculationMethod) bean).getFirstStubEndIndex();
        case -2056975372:  // finalStubStartIndex
          return ((StubCalculationMethod) bean).getFinalStubStartIndex();
        case 1083339803:  // finalStubEndIndex
          return ((StubCalculationMethod) bean).getFinalStubEndIndex();
      }
      return super.propertyGet(bean, propertyName, quiet);
    }

    @Override
    protected void propertySet(Bean bean, String propertyName, Object newValue, boolean quiet) {
      metaProperty(propertyName);
      if (quiet) {
        return;
      }
      throw new UnsupportedOperationException("Property cannot be written: " + propertyName);
    }

  }

  //-----------------------------------------------------------------------
  /**
   * The bean-builder for {@code StubCalculationMethod}.
   */
  public static final class Builder extends BasicImmutableBeanBuilder<StubCalculationMethod> {

    private StubType _type;
    private Interpolator _stubInterpolation;
    private double _firstStubRate;
    private LocalDate _firstStubEndDate;
    private Tenor _firstStubStartIndex;
    private Tenor _firstStubEndIndex;
    private Tenor _finalStubStartIndex;
    private Tenor _finalStubEndIndex;

    /**
     * Restricted constructor.
     */
    private Builder() {
      super(StubCalculationMethod.Meta.INSTANCE);
    }

    /**
     * Restricted copy constructor.
     * @param beanToCopy  the bean to copy from, not null
     */
    private Builder(StubCalculationMethod beanToCopy) {
      super(StubCalculationMethod.Meta.INSTANCE);
      this._type = beanToCopy.getType();
      this._stubInterpolation = beanToCopy.getStubInterpolation();
      this._firstStubRate = beanToCopy.getFirstStubRate();
      this._firstStubEndDate = beanToCopy.getFirstStubEndDate();
      this._firstStubStartIndex = beanToCopy.getFirstStubStartIndex();
      this._firstStubEndIndex = beanToCopy.getFirstStubEndIndex();
      this._finalStubStartIndex = beanToCopy.getFinalStubStartIndex();
      this._finalStubEndIndex = beanToCopy.getFinalStubEndIndex();
    }

    //-----------------------------------------------------------------------
    @Override
    public Builder set(String propertyName, Object newValue) {
      switch (propertyName.hashCode()) {
        case 3575610:  // type
          this._type = (StubType) newValue;
          break;
        case 1267461014:  // stubInterpolation
          this._stubInterpolation = (Interpolator) newValue;
          break;
        case -579843714:  // firstStubRate
          this._firstStubRate = (Double) newValue;
          break;
        case 1938251211:  // firstStubEndDate
          this._firstStubEndDate = (LocalDate) newValue;
          break;
        case 1932095406:  // firstStubStartIndex
          this._firstStubStartIndex = (Tenor) newValue;
          break;
        case -38764971:  // firstStubEndIndex
          this._firstStubEndIndex = (Tenor) newValue;
          break;
        case -2056975372:  // finalStubStartIndex
          this._finalStubStartIndex = (Tenor) newValue;
          break;
        case 1083339803:  // finalStubEndIndex
          this._finalStubEndIndex = (Tenor) newValue;
          break;
        default:
          throw new NoSuchElementException("Unknown property: " + propertyName);
      }
      return this;
    }

    @Override
    public StubCalculationMethod build() {
      return new StubCalculationMethod(
          _type,
          _stubInterpolation,
          _firstStubRate,
          _firstStubEndDate,
          _firstStubStartIndex,
          _firstStubEndIndex,
          _finalStubStartIndex,
          _finalStubEndIndex);
    }

    //-----------------------------------------------------------------------
    /**
     * Sets the {@code type} property in the builder.
     * @param type  the new value, not null
     * @return this, for chaining, not null
     */
    public Builder type(StubType type) {
      JodaBeanUtils.notNull(type, "type");
      this._type = type;
      return this;
    }

    /**
     * Sets the {@code stubInterpolation} property in the builder.
     * @param stubInterpolation  the new value
     * @return this, for chaining, not null
     */
    public Builder stubInterpolation(Interpolator stubInterpolation) {
      this._stubInterpolation = stubInterpolation;
      return this;
    }

    /**
     * Sets the {@code firstStubRate} property in the builder.
     * @param firstStubRate  the new value, not null
     * @return this, for chaining, not null
     */
    public Builder firstStubRate(double firstStubRate) {
      JodaBeanUtils.notNull(firstStubRate, "firstStubRate");
      this._firstStubRate = firstStubRate;
      return this;
    }

    /**
     * Sets the {@code firstStubEndDate} property in the builder.
     * @param firstStubEndDate  the new value, not null
     * @return this, for chaining, not null
     */
    public Builder firstStubEndDate(LocalDate firstStubEndDate) {
      JodaBeanUtils.notNull(firstStubEndDate, "firstStubEndDate");
      this._firstStubEndDate = firstStubEndDate;
      return this;
    }

    /**
     * Sets the {@code firstStubStartIndex} property in the builder.
     * @param firstStubStartIndex  the new value, not null
     * @return this, for chaining, not null
     */
    public Builder firstStubStartIndex(Tenor firstStubStartIndex) {
      JodaBeanUtils.notNull(firstStubStartIndex, "firstStubStartIndex");
      this._firstStubStartIndex = firstStubStartIndex;
      return this;
    }

    /**
     * Sets the {@code firstStubEndIndex} property in the builder.
     * @param firstStubEndIndex  the new value, not null
     * @return this, for chaining, not null
     */
    public Builder firstStubEndIndex(Tenor firstStubEndIndex) {
      JodaBeanUtils.notNull(firstStubEndIndex, "firstStubEndIndex");
      this._firstStubEndIndex = firstStubEndIndex;
      return this;
    }

    /**
     * Sets the {@code finalStubStartIndex} property in the builder.
     * @param finalStubStartIndex  the new value, not null
     * @return this, for chaining, not null
     */
    public Builder finalStubStartIndex(Tenor finalStubStartIndex) {
      JodaBeanUtils.notNull(finalStubStartIndex, "finalStubStartIndex");
      this._finalStubStartIndex = finalStubStartIndex;
      return this;
    }

    /**
     * Sets the {@code finalStubEndIndex} property in the builder.
     * @param finalStubEndIndex  the new value, not null
     * @return this, for chaining, not null
     */
    public Builder finalStubEndIndex(Tenor finalStubEndIndex) {
      JodaBeanUtils.notNull(finalStubEndIndex, "finalStubEndIndex");
      this._finalStubEndIndex = finalStubEndIndex;
      return this;
    }

    //-----------------------------------------------------------------------
    @Override
    public String toString() {
      StringBuilder buf = new StringBuilder(288);
      buf.append("StubCalculationMethod.Builder{");
      buf.append("type").append('=').append(_type).append(',').append(' ');
      buf.append("stubInterpolation").append('=').append(_stubInterpolation).append(',').append(' ');
      buf.append("firstStubRate").append('=').append(_firstStubRate).append(',').append(' ');
      buf.append("firstStubEndDate").append('=').append(_firstStubEndDate).append(',').append(' ');
      buf.append("firstStubStartIndex").append('=').append(_firstStubStartIndex).append(',').append(' ');
      buf.append("firstStubEndIndex").append('=').append(_firstStubEndIndex).append(',').append(' ');
      buf.append("finalStubStartIndex").append('=').append(_finalStubStartIndex).append(',').append(' ');
      buf.append("finalStubEndIndex").append('=').append(_finalStubEndIndex);
      buf.append('}');
      return buf.toString();
    }

  }

  ///CLOVER:ON
  //-------------------------- AUTOGENERATED END --------------------------
}
