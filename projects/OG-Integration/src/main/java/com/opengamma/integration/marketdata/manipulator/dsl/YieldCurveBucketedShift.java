/**
 * Copyright (C) 2013 - present by OpenGamma Inc. and the OpenGamma group of companies
 *
 * Please see distribution for license.
 */
package com.opengamma.integration.marketdata.manipulator.dsl;

import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Set;

import org.joda.beans.Bean;
import org.joda.beans.BeanDefinition;
import org.joda.beans.ImmutableBean;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.PropertyDefinition;
import org.joda.beans.impl.BasicImmutableBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaBean;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

import com.opengamma.analytics.financial.model.interestrate.curve.YieldAndDiscountCurve;

/**
 * Applies a bucketed shift to a {@link YieldAndDiscountCurve}
 */
@BeanDefinition
public final class YieldCurveBucketedShift implements ImmutableBean {
  
  /**
   * Start years
   */
  @PropertyDefinition
  private final double _startYears;
  /**
   * End years
   */
  @PropertyDefinition
  private final double _endYears;
  /**
   * Curve shift type
   */
  @PropertyDefinition
  private final CurveShiftType _curveShiftType;
  /**
   * Shift magnitude
   */
  @PropertyDefinition
  private final double _shift;
  
  /**
   * Creates a bucketed shift manipulator.
   * @param startYears start time
   * @param endYears end time
   * @param curveShiftType curve shift type
   * @param shift shift magnitude
   * @return a new YieldCurveBucketedShift object
   */
  public static YieldCurveBucketedShift create(
      double startYears,
      double endYears,
      CurveShiftType curveShiftType,
      double shift) {
    return new YieldCurveBucketedShift(startYears, endYears, curveShiftType, shift);
  }
  

  //------------------------- AUTOGENERATED START -------------------------
  ///CLOVER:OFF
  /**
   * The meta-bean for {@code YieldCurveBucketedShift}.
   * @return the meta-bean, not null
   */
  public static YieldCurveBucketedShift.Meta meta() {
    return YieldCurveBucketedShift.Meta.INSTANCE;
  }

  static {
    JodaBeanUtils.registerMetaBean(YieldCurveBucketedShift.Meta.INSTANCE);
  }

  /**
   * Returns a builder used to create an instance of the bean.
   *
   * @return the builder, not null
   */
  public static YieldCurveBucketedShift.Builder builder() {
    return new YieldCurveBucketedShift.Builder();
  }

  private YieldCurveBucketedShift(
      double startYears,
      double endYears,
      CurveShiftType curveShiftType,
      double shift) {
    this._startYears = startYears;
    this._endYears = endYears;
    this._curveShiftType = curveShiftType;
    this._shift = shift;
  }

  @Override
  public YieldCurveBucketedShift.Meta metaBean() {
    return YieldCurveBucketedShift.Meta.INSTANCE;
  }

  @Override
  public <R> Property<R> property(String propertyName) {
    return metaBean().<R>metaProperty(propertyName).createProperty(this);
  }

  @Override
  public Set<String> propertyNames() {
    return metaBean().metaPropertyMap().keySet();
  }

  //-----------------------------------------------------------------------
  /**
   * Gets start years
   * @return the value of the property
   */
  public double getStartYears() {
    return _startYears;
  }

  //-----------------------------------------------------------------------
  /**
   * Gets end years
   * @return the value of the property
   */
  public double getEndYears() {
    return _endYears;
  }

  //-----------------------------------------------------------------------
  /**
   * Gets curve shift type
   * @return the value of the property
   */
  public CurveShiftType getCurveShiftType() {
    return _curveShiftType;
  }

  //-----------------------------------------------------------------------
  /**
   * Gets shift magnitude
   * @return the value of the property
   */
  public double getShift() {
    return _shift;
  }

  //-----------------------------------------------------------------------
  /**
   * Returns a builder that allows this bean to be mutated.
   * @return the mutable builder, not null
   */
  public Builder toBuilder() {
    return new Builder(this);
  }

  @Override
  public YieldCurveBucketedShift clone() {
    return this;
  }

  @Override
  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (obj != null && obj.getClass() == this.getClass()) {
      YieldCurveBucketedShift other = (YieldCurveBucketedShift) obj;
      return JodaBeanUtils.equal(getStartYears(), other.getStartYears()) &&
          JodaBeanUtils.equal(getEndYears(), other.getEndYears()) &&
          JodaBeanUtils.equal(getCurveShiftType(), other.getCurveShiftType()) &&
          JodaBeanUtils.equal(getShift(), other.getShift());
    }
    return false;
  }

  @Override
  public int hashCode() {
    int hash = getClass().hashCode();
    hash += hash * 31 + JodaBeanUtils.hashCode(getStartYears());
    hash += hash * 31 + JodaBeanUtils.hashCode(getEndYears());
    hash += hash * 31 + JodaBeanUtils.hashCode(getCurveShiftType());
    hash += hash * 31 + JodaBeanUtils.hashCode(getShift());
    return hash;
  }

  @Override
  public String toString() {
    StringBuilder buf = new StringBuilder(160);
    buf.append("YieldCurveBucketedShift{");
    buf.append("startYears").append('=').append(getStartYears()).append(',').append(' ');
    buf.append("endYears").append('=').append(getEndYears()).append(',').append(' ');
    buf.append("curveShiftType").append('=').append(getCurveShiftType()).append(',').append(' ');
    buf.append("shift").append('=').append(JodaBeanUtils.toString(getShift()));
    buf.append('}');
    return buf.toString();
  }

  //-----------------------------------------------------------------------
  /**
   * The meta-bean for {@code YieldCurveBucketedShift}.
   */
  public static final class Meta extends DirectMetaBean {
    /**
     * The singleton instance of the meta-bean.
     */
    static final Meta INSTANCE = new Meta();

    /**
     * The meta-property for the {@code startYears} property.
     */
    private final MetaProperty<Double> _startYears = DirectMetaProperty.ofImmutable(
        this, "startYears", YieldCurveBucketedShift.class, Double.TYPE);
    /**
     * The meta-property for the {@code endYears} property.
     */
    private final MetaProperty<Double> _endYears = DirectMetaProperty.ofImmutable(
        this, "endYears", YieldCurveBucketedShift.class, Double.TYPE);
    /**
     * The meta-property for the {@code curveShiftType} property.
     */
    private final MetaProperty<CurveShiftType> _curveShiftType = DirectMetaProperty.ofImmutable(
        this, "curveShiftType", YieldCurveBucketedShift.class, CurveShiftType.class);
    /**
     * The meta-property for the {@code shift} property.
     */
    private final MetaProperty<Double> _shift = DirectMetaProperty.ofImmutable(
        this, "shift", YieldCurveBucketedShift.class, Double.TYPE);
    /**
     * The meta-properties.
     */
    private final Map<String, MetaProperty<?>> _metaPropertyMap$ = new DirectMetaPropertyMap(
        this, null,
        "startYears",
        "endYears",
        "curveShiftType",
        "shift");

    /**
     * Restricted constructor.
     */
    protected Meta() {
    }

    @Override
    protected MetaProperty<?> metaPropertyGet(String propertyName) {
      switch (propertyName.hashCode()) {
        case -1579140972:  // startYears
          return _startYears;
        case 1719556027:  // endYears
          return _endYears;
        case 1993874093:  // curveShiftType
          return _curveShiftType;
        case 109407362:  // shift
          return _shift;
      }
      return super.metaPropertyGet(propertyName);
    }

    @Override
    public YieldCurveBucketedShift.Builder builder() {
      return new YieldCurveBucketedShift.Builder();
    }

    @Override
    public Class<? extends YieldCurveBucketedShift> beanType() {
      return YieldCurveBucketedShift.class;
    }

    @Override
    public Map<String, MetaProperty<?>> metaPropertyMap() {
      return _metaPropertyMap$;
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-property for the {@code startYears} property.
     * @return the meta-property, not null
     */
    public MetaProperty<Double> startYears() {
      return _startYears;
    }

    /**
     * The meta-property for the {@code endYears} property.
     * @return the meta-property, not null
     */
    public MetaProperty<Double> endYears() {
      return _endYears;
    }

    /**
     * The meta-property for the {@code curveShiftType} property.
     * @return the meta-property, not null
     */
    public MetaProperty<CurveShiftType> curveShiftType() {
      return _curveShiftType;
    }

    /**
     * The meta-property for the {@code shift} property.
     * @return the meta-property, not null
     */
    public MetaProperty<Double> shift() {
      return _shift;
    }

    //-----------------------------------------------------------------------
    @Override
    protected Object propertyGet(Bean bean, String propertyName, boolean quiet) {
      switch (propertyName.hashCode()) {
        case -1579140972:  // startYears
          return ((YieldCurveBucketedShift) bean).getStartYears();
        case 1719556027:  // endYears
          return ((YieldCurveBucketedShift) bean).getEndYears();
        case 1993874093:  // curveShiftType
          return ((YieldCurveBucketedShift) bean).getCurveShiftType();
        case 109407362:  // shift
          return ((YieldCurveBucketedShift) bean).getShift();
      }
      return super.propertyGet(bean, propertyName, quiet);
    }

    @Override
    protected void propertySet(Bean bean, String propertyName, Object newValue, boolean quiet) {
      metaProperty(propertyName);
      if (quiet) {
        return;
      }
      throw new UnsupportedOperationException("Property cannot be written: " + propertyName);
    }

  }

  //-----------------------------------------------------------------------
  /**
   * The bean-builder for {@code YieldCurveBucketedShift}.
   */
  public static final class Builder extends BasicImmutableBeanBuilder<YieldCurveBucketedShift> {

    private double _startYears;
    private double _endYears;
    private CurveShiftType _curveShiftType;
    private double _shift;

    /**
     * Restricted constructor.
     */
    private Builder() {
      super(YieldCurveBucketedShift.Meta.INSTANCE);
    }

    /**
     * Restricted copy constructor.
     * @param beanToCopy  the bean to copy from, not null
     */
    private Builder(YieldCurveBucketedShift beanToCopy) {
      super(YieldCurveBucketedShift.Meta.INSTANCE);
      this._startYears = beanToCopy.getStartYears();
      this._endYears = beanToCopy.getEndYears();
      this._curveShiftType = beanToCopy.getCurveShiftType();
      this._shift = beanToCopy.getShift();
    }

    //-----------------------------------------------------------------------
    @Override
    public Builder set(String propertyName, Object newValue) {
      switch (propertyName.hashCode()) {
        case -1579140972:  // startYears
          this._startYears = (Double) newValue;
          break;
        case 1719556027:  // endYears
          this._endYears = (Double) newValue;
          break;
        case 1993874093:  // curveShiftType
          this._curveShiftType = (CurveShiftType) newValue;
          break;
        case 109407362:  // shift
          this._shift = (Double) newValue;
          break;
        default:
          throw new NoSuchElementException("Unknown property: " + propertyName);
      }
      return this;
    }

    @Override
    public YieldCurveBucketedShift build() {
      return new YieldCurveBucketedShift(
          _startYears,
          _endYears,
          _curveShiftType,
          _shift);
    }

    //-----------------------------------------------------------------------
    /**
     * Sets the {@code startYears} property in the builder.
     * @param startYears  the new value
     * @return this, for chaining, not null
     */
    public Builder startYears(double startYears) {
      this._startYears = startYears;
      return this;
    }

    /**
     * Sets the {@code endYears} property in the builder.
     * @param endYears  the new value
     * @return this, for chaining, not null
     */
    public Builder endYears(double endYears) {
      this._endYears = endYears;
      return this;
    }

    /**
     * Sets the {@code curveShiftType} property in the builder.
     * @param curveShiftType  the new value
     * @return this, for chaining, not null
     */
    public Builder curveShiftType(CurveShiftType curveShiftType) {
      this._curveShiftType = curveShiftType;
      return this;
    }

    /**
     * Sets the {@code shift} property in the builder.
     * @param shift  the new value
     * @return this, for chaining, not null
     */
    public Builder shift(double shift) {
      this._shift = shift;
      return this;
    }

    //-----------------------------------------------------------------------
    @Override
    public String toString() {
      StringBuilder buf = new StringBuilder(160);
      buf.append("YieldCurveBucketedShift.Builder{");
      buf.append("startYears").append('=').append(_startYears).append(',').append(' ');
      buf.append("endYears").append('=').append(_endYears).append(',').append(' ');
      buf.append("curveShiftType").append('=').append(_curveShiftType).append(',').append(' ');
      buf.append("shift").append('=').append(_shift);
      buf.append('}');
      return buf.toString();
    }

  }

  ///CLOVER:ON
  //-------------------------- AUTOGENERATED END --------------------------
}
