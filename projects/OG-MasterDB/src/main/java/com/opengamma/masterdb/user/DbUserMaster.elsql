-- SQL for user master

-- ==========================================================================
@NAME(GetById)
  SELECT
    main.id AS doc_id,
    main.oid AS doc_oid,
    main.ver_from_instant AS ver_from_instant,
    main.ver_to_instant AS ver_to_instant,
    main.corr_from_instant AS corr_from_instant,
    main.corr_to_instant AS corr_to_instant,
    main.userid AS userid,
    main.password AS password,
    main.name AS name,
    main.time_zone AS time_zone,
    main.email_address AS email_address,
    ui.idkey_id as idkey_id,
    ik.key_scheme as key_scheme,
    ik.key_value as key_value,
    ent.entitlement_pattern as entitlement_pattern
  FROM
    usr_oguser main
    LEFT JOIN usr_oguser2idkey ui ON (ui.oguser_id = main.id)
    LEFT JOIN usr_idkey ik ON (ik.id = ui.idkey_id)
    LEFT JOIN usr_entitlement ent on (ent.oguser_id = main.id)
  WHERE main.id = :doc_id
    AND main.oid = :doc_oid
  ORDER BY
    idkey_id,
    ent.entitlement_index


-- ==========================================================================
@NAME(GetByOidInstants)
  SELECT
    main.id AS doc_id,
    main.oid AS doc_oid,
    main.ver_from_instant AS ver_from_instant,
    main.ver_to_instant AS ver_to_instant,
    main.corr_from_instant AS corr_from_instant,
    main.corr_to_instant AS corr_to_instant,
    main.userid AS userid,
    main.password AS password,
    main.name AS name,
    main.time_zone AS time_zone,
    main.email_address AS email_address,
    ui.idkey_id as idkey_id,
    ik.key_scheme as key_scheme,
    ik.key_scheme as key_scheme,
    ik.key_value as key_value,
    ent.entitlement_pattern as entitlement_pattern
  FROM
    usr_oguser main
    LEFT JOIN usr_oguser2idkey ui ON (ui.oguser_id = main.id)
    LEFT JOIN usr_idkey ik ON (ik.id = ui.idkey_id)
    LEFT JOIN usr_entitlement ent on (ent.oguser_id = main.id)
  WHERE main.oid = :doc_oid
    AND main.ver_from_instant <= :version_as_of AND main.ver_to_instant > :version_as_of
    AND main.corr_from_instant <= :corrected_to AND main.corr_to_instant > :corrected_to
  ORDER BY
    idkey_id,
    ent.entitlement_index


-- ==========================================================================
@NAME(Search)
  WITH cte_docs AS ( @INCLUDE(SearchInner) )
  SELECT
    main.id AS doc_id,
    main.oid AS doc_oid,
    main.ver_from_instant AS ver_from_instant,
    main.ver_to_instant AS ver_to_instant,
    main.corr_from_instant AS corr_from_instant,
    main.corr_to_instant AS corr_to_instant,
    main.userid AS userid,
    main.password AS password,
    main.name AS name,
    main.time_zone AS time_zone,
    main.email_address AS email_address,
    ui.idkey_id as idkey_id,
    ik.key_scheme as key_scheme,
    ik.key_value as key_value,
    ent.entitlement_pattern as entitlement_pattern
  FROM
    usr_oguser main
    INNER JOIN cte_docs ON main.id = cte_docs.id
    LEFT JOIN usr_oguser2idkey ui ON (ui.oguser_id = main.id)
    LEFT JOIN usr_idkey ik ON (ik.id = ui.idkey_id)
    LEFT JOIN usr_entitlement ent on (ent.oguser_id = main.id)
  ORDER BY
    main.@VALUE(:sort_order),
    main.id


-- ==========================================================================
@NAME(SearchInner)
  @PAGING(:paging_offset,:paging_fetch)
    SELECT
      id
    FROM
      usr_oguser
    @INCLUDE(SearchWhere)
    ORDER BY
      @VALUE(:sort_order),
      usr_oguser.id


-- ==========================================================================
@NAME(SearchCount)
  SELECT
    COUNT(id)
  FROM
    usr_oguser
  @INCLUDE(SearchWhere)


-- ==========================================================================
@NAME(SearchWhere)
  WHERE ver_from_instant <= :version_as_of_instant AND ver_to_instant > :version_as_of_instant
    AND corr_from_instant <= :corrected_to_instant AND corr_to_instant > :corrected_to_instant
    @AND(:sql_search_object_ids)
      oid IN ( @VALUE(:sql_search_object_ids) )
    @AND(:userid)
      UPPER(userid) @LIKE UPPER(:userid)
    @AND(:name)
      UPPER(name) @LIKE UPPER(:name)
    @AND(:time_zone)
      UPPER(time_zone) @LIKE UPPER(:time_zone)
    @AND(:email_address)
      UPPER(email_address) @LIKE UPPER(:email_address)
    @AND(:external_id_scheme)
      id IN ( @INCLUDE(SelectKeyScheme) )
    @AND(:external_id_value)
      id IN ( @INCLUDE(SelectKeyValue) )
    @AND(:sql_search_external_ids_type = EXACT)
      id IN ( @INCLUDE(SelectKeyValuesExact) )
    @AND(:sql_search_external_ids_type = ALL)
      id IN ( @INCLUDE(SelectKeyValuesAll) )
    @AND(:sql_search_external_ids_type = ANY)
      id IN ( @INCLUDE(SelectKeyValuesAny) )
    @AND(:sql_search_external_ids_type = NONE)
      id NOT IN ( @INCLUDE(SelectKeyValuesAny) )


-- ==========================================================================
@NAME(SelectKeyValuesExact)
  SELECT
    matched_doc_id AS doc_id
  FROM
    (
      SELECT
        oguser_id AS matched_doc_id,
        COUNT(oguser_id) AS matched_count
      FROM
        usr_oguser2idkey,
        usr_oguser
      WHERE usr_oguser2idkey.oguser_id = usr_oguser.id
        AND usr_oguser.ver_from_instant <= :version_as_of_instant AND usr_oguser.ver_to_instant > :version_as_of_instant
        AND usr_oguser.corr_from_instant <= :corrected_to_instant AND usr_oguser.corr_to_instant > :corrected_to_instant
        AND idkey_id IN ( @INCLUDE(SelectKeyValuesOr) )
      GROUP BY
        oguser_id
      HAVING
        COUNT(oguser_id) >= :id_search_size
    ) AS a, (
      SELECT
        oguser_id AS total_doc_id,
        COUNT(oguser_id) AS total_count
      FROM
        usr_oguser2idkey,
        usr_oguser
      WHERE usr_oguser2idkey.oguser_id = usr_oguser.id
        AND usr_oguser.ver_from_instant <= :version_as_of_instant AND usr_oguser.ver_to_instant > :version_as_of_instant
        AND usr_oguser.corr_from_instant <= :corrected_to_instant AND usr_oguser.corr_to_instant > :corrected_to_instant
      GROUP BY
        oguser_id
    ) AS b
  WHERE matched_doc_id = total_doc_id
    AND matched_count = total_count


-- ==========================================================================
@NAME(SelectKeyValuesAll)
  SELECT
    oguser_id
  FROM
    usr_oguser2idkey,
    usr_oguser
  WHERE usr_oguser2idkey.oguser_id = usr_oguser.id
    AND usr_oguser.ver_from_instant <= :version_as_of_instant AND usr_oguser.ver_to_instant > :version_as_of_instant
    AND usr_oguser.corr_from_instant <= :corrected_to_instant AND usr_oguser.corr_to_instant > :corrected_to_instant
    AND idkey_id IN ( @INCLUDE(SelectKeyValuesOr) )
    GROUP BY
      oguser_id
    HAVING
      COUNT(oguser_id) >= :id_search_size


-- ==========================================================================
@NAME(SelectKeyValuesAny)
  SELECT
    DISTINCT oguser_id
  FROM
    usr_oguser2idkey,
    usr_oguser
  WHERE usr_oguser2idkey.oguser_id = usr_oguser.id
    AND usr_oguser.ver_from_instant <= :version_as_of_instant AND usr_oguser.ver_to_instant > :version_as_of_instant
    AND usr_oguser.corr_from_instant <= :corrected_to_instant AND usr_oguser.corr_to_instant > :corrected_to_instant
    AND idkey_id IN ( @INCLUDE(SelectKeyValuesOr) )


-- ==========================================================================
@NAME(SelectKeyValuesOr)
  SELECT
    id
  FROM
    usr_idkey
  WHERE
    @VALUE(:sql_search_external_ids)


-- ==========================================================================
@NAME(History)
  WITH cte_docs AS ( @INCLUDE(HistoryInner) )
  SELECT
    main.id AS doc_id,
    main.oid AS doc_oid,
    main.ver_from_instant AS ver_from_instant,
    main.ver_to_instant AS ver_to_instant,
    main.corr_from_instant AS corr_from_instant,
    main.corr_to_instant AS corr_to_instant,
    main.userid AS userid,
    main.password AS password,
    main.name AS name,
    main.time_zone AS time_zone,
    main.email_address AS email_address,
    ui.idkey_id as idkey_id,
    ik.key_scheme as key_scheme,
    ik.key_scheme as key_scheme,
    ik.key_value as key_value,
    ent.entitlement_pattern as entitlement_pattern
  FROM
    usr_oguser main
    INNER JOIN cte_docs ON main.id = cte_docs.id
    LEFT JOIN usr_oguser2idkey ui ON (ui.oguser_id = main.id)
    LEFT JOIN usr_idkey ik ON (ik.id = ui.idkey_id)
    LEFT JOIN usr_entitlement ent on (ent.oguser_id = main.id)
  ORDER BY
    main.ver_from_instant DESC,
    main.corr_from_instant DESC


-- ==========================================================================
@NAME(HistoryInner)
  @PAGING(:paging_offset,:paging_fetch)
    SELECT
      id
    FROM
      usr_oguser
    @INCLUDE(HistoryWhere)
    ORDER BY
      ver_from_instant DESC,
      corr_from_instant DESC


-- ==========================================================================
@NAME(HistoryCount)
  SELECT
    COUNT(id)
  FROM
    usr_oguser 
  @INCLUDE(HistoryWhere)


-- ==========================================================================
@NAME(HistoryWhere)
  WHERE oid = :doc_oid
    @IF(:sql_history_versions = Point)
      AND ver_from_instant <= :versions_from_instant AND ver_to_instant > :versions_from_instant
    @IF(:sql_history_versions = Range)
      @AND(:versions_from_instant)
        ((ver_from_instant <= :versions_from_instant AND ver_to_instant > :versions_from_instant) OR ver_from_instant >= :versions_from_instant)
      @AND(:versions_to_instant)
        ((ver_from_instant <= :versions_to_instant AND ver_to_instant > :versions_to_instant) OR ver_to_instant < :versions_to_instant)
    @IF(:sql_history_corrections = Point)
      AND corr_from_instant <= :corrections_from_instant AND corr_to_instant > :corrections_from_instant
    @IF(:sql_history_corrections = Range)
      @AND(:corrections_from_instant)
        ((corr_from_instant <= :corrections_from_instant AND corr_to_instant > :corrections_from_instant) OR corr_from_instant >= :corrections_from_instant)
      @AND(:corrections_to_instant)
        ((corr_from_instant <= :corrections_to_instant AND corr_to_instant > :corrections_to_instant) OR corr_to_instant < :corrections_to_instant)


-- ==========================================================================
@NAME(Insert)
  INSERT INTO usr_oguser
    (id, oid, ver_from_instant, ver_to_instant, corr_from_instant, corr_to_instant, userid, password, name, time_zone, email_address)
  VALUES
    (:doc_id, :doc_oid, :ver_from_instant, :ver_to_instant, :corr_from_instant, :corr_to_instant, :userid, :password, :name, :time_zone, :email_address)


-- ==========================================================================
@NAME(InsertEntitlement)
  INSERT INTO usr_entitlement
    (oguser_id, entitlement_index, entitlement_pattern)
  VALUES
    (:oguser_id, :entitlement_index, :entitlement_pattern)


-- ==========================================================================
@NAME(InsertDoc2IdKey)
  INSERT INTO usr_oguser2idkey
    (oguser_id, idkey_id)
  VALUES
    (:doc_id, ( @INCLUDE(SelectIdKey) ))


-- ==========================================================================
@NAME(SelectIdKey)
  SELECT
    id
  FROM
    usr_idkey
  WHERE key_scheme = :key_scheme
    AND key_value = :key_value


-- ==========================================================================
@NAME(InsertIdKey)
  INSERT INTO usr_idkey
    (id, key_scheme, key_value)
  VALUES
    (:idkey_id, :key_scheme, :key_value)


-- ==========================================================================
@NAME(UpdateVersionToInstant)
  UPDATE usr_oguser
  SET ver_to_instant = :ver_to_instant
  WHERE id = :doc_id
    AND ver_to_instant >= :max_instant


-- ==========================================================================
@NAME(UpdateCorrectionToInstant)
  UPDATE usr_oguser
  SET corr_to_instant = :corr_to_instant
  WHERE id = :doc_id
    AND corr_to_instant >= :max_instant


-- ==========================================================================
@NAME(GetSchemaVersion)
  SELECT version_value
  FROM usr_schema_version
  WHERE version_key = :version_key


-- ==========================================================================
