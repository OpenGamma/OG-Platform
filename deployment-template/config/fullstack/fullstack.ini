# Configuration to setup a main OpenGamma server

[global]
time.zone = ${time.zone}

#============================================================================
# Infrastructure

[standardDataSource]
factory = com.opengamma.component.factory.infrastructure.DataSourceComponentFactory
classifier = standard
driverClass = ${db.fin.driver}
jdbcUrl = ${db.fin.url}
username =  ${db.fin.username}
password = ${db.fin.password}
poolName = Standard
partitionCount = 1
acquireIncrement = 1
minConnectionsPerPartition = 1
maxConnectionsPerPartition = 10

[htsDataSource]
factory = com.opengamma.component.factory.infrastructure.DataSourceComponentFactory
classifier = hts
driverClass = ${db.hts.driver}
jdbcUrl = ${db.hts.url}
username =  ${db.hts.username}
password = ${db.hts.password}
poolName = TimeSeries
partitionCount = 1
acquireIncrement = 1
minConnectionsPerPartition = 1
maxConnectionsPerPartition = 10

[batDataSource]
factory = com.opengamma.component.factory.infrastructure.DataSourceComponentFactory
classifier = bat
driverClass = ${db.batch.driver}
jdbcUrl = ${db.batch.url}
username =  ${db.batch.username}
password = ${db.batch.password}
poolName = Batch
partitionCount = 1
acquireIncrement = 1
minConnectionsPerPartition = 1
maxConnectionsPerPartition = 10

[userDataSource]
factory = com.opengamma.component.factory.infrastructure.DataSourceComponentFactory
classifier = user
driverClass = ${db.userfinancial.driver}
jdbcUrl = ${db.userfinancial.url}
username =  ${db.userfinancial.username}
password = ${db.userfinancial.password}
poolName = User
partitionCount = 1
acquireIncrement = 1
minConnectionsPerPartition = 1
maxConnectionsPerPartition = 10

[finDbConnector]
factory = com.opengamma.component.factory.infrastructure.DbConnectorComponentFactory
classifier = fin
dataSource = ::standard
dialect = ${db.fin.dialect}
transactionIsolationLevel = ISOLATION_READ_COMMITTED
transactionPropagationBehavior = PROPAGATION_REQUIRED

[secDbConnector]
factory = com.opengamma.component.factory.infrastructure.DbConnectorComponentFactory
classifier = sec
dataSource= ::standard
dialect = ${db.fin.dialect}
transactionIsolationLevel = ISOLATION_READ_COMMITTED
transactionPropagationBehavior = PROPAGATION_REQUIRED
hibernateMappingFiles = com.opengamma.masterdb.security.hibernate.HibernateSecurityMasterFiles

[htsDbConnector]
factory = com.opengamma.component.factory.infrastructure.DbConnectorComponentFactory
classifier = hts
dataSource = ::hts
dialect = ${db.hts.dialect}
transactionIsolationLevel = ISOLATION_READ_COMMITTED
transactionPropagationBehavior = PROPAGATION_REQUIRED

[batDbConnector]
factory = com.opengamma.component.factory.infrastructure.DbConnectorComponentFactory
classifier = bat
dataSource = ::bat
dialect = ${db.batch.dialect}
transactionIsolationLevel = ISOLATION_READ_COMMITTED
transactionPropagationBehavior = PROPAGATION_REQUIRED
allowHibernateThreadBoundSession = true
hibernateMappingFiles = com.opengamma.masterdb.batch.HibernateBatchDbFiles

[userDbConnector]
factory = com.opengamma.component.factory.infrastructure.DbConnectorComponentFactory
classifier = user
dataSource = ::user
dialect = ${db.userfinancial.dialect}
transactionIsolationLevel = ISOLATION_READ_COMMITTED
transactionPropagationBehavior = PROPAGATION_REQUIRED
hibernateMappingFiles = com.opengamma.masterdb.security.hibernate.HibernateSecurityMasterFiles

[standardFudgeContext]
factory = com.opengamma.component.factory.infrastructure.FudgeContextComponentFactory
classifier = standard

[standardJmsConnectorFactory]
factory = com.opengamma.component.factory.infrastructure.ActiveMqJmsConnectorComponentFactory
classifier = standard
clientBrokerUri = ${activeMQ.brokerURL}

[standardCacheManagerFactory]
factory = com.opengamma.component.factory.infrastructure.CacheManagerComponentFactory
classifier = standard

[standardScheduledExecutorService]
factory = com.opengamma.component.factory.infrastructure.ScheduledExecutorServiceComponentFactory
classifier = standard

[standardMBeanServer]
factory = com.opengamma.component.factory.infrastructure.MBeanServerComponentFactory
classifier = standard

[remoteProviders]
factory = com.opengamma.component.factory.provider.RemoteProvidersComponentFactory
baseUri = ${component.remoteProviders.baseUri}

#============================================================================
# Database

[dbConfigMaster]
factory = com.opengamma.component.factory.master.DbConfigMasterComponentFactory
classifier = central
dbConnector = ::fin
enforceSchemaVersion = ${component.master.enforceSchemaVersion}

[dbExchangeMaster]
factory = com.opengamma.component.factory.master.DbExchangeMasterComponentFactory
classifier = central
dbConnector = ::fin
enforceSchemaVersion = ${component.master.enforceSchemaVersion}

[dbHolidayMaster]
factory = com.opengamma.component.factory.master.DbHolidayMasterComponentFactory
classifier = central
dbConnector = ::fin
enforceSchemaVersion = ${component.master.enforceSchemaVersion}

[memRegionMaster]
factory = com.opengamma.component.factory.master.InMemoryRegionMasterComponentFactory
classifier = central

[dbSnapshotMaster]
factory = com.opengamma.component.factory.master.DbMarketDataSnapshotMasterComponentFactory
classifier = central
dbConnector = ::fin
jmsConnector = ::standard
jmsChangeManagerTopic = OpenGamma.MasterChange.MarketDataSnapshotMaster.central-${og.cluster.name}
enforceSchemaVersion = ${component.master.enforceSchemaVersion}

[dbSecurityMaster]
factory = com.opengamma.component.factory.master.DbSecurityBeanMasterComponentFactory
classifier = central
dbConnector = ::sec
cacheManager = ::standard
enforceSchemaVersion = ${component.master.enforceSchemaVersion}

[dbConventionMaster]
factory = com.opengamma.component.factory.master.DbConventionMasterComponentFactory
classifier = central
dbConnector = ::fin
enforceSchemaVersion = ${component.master.enforceSchemaVersion}

[dbLegalEntityMaster]
factory = com.opengamma.component.factory.master.DbLegalEntityMasterComponentFactory
classifier = central
dbConnector = ::fin
enforceSchemaVersion = ${component.master.enforceSchemaVersion}

[dbPositionMaster]
factory = com.opengamma.component.factory.master.DbPositionMasterComponentFactory
classifier = central
dbConnector = ::fin
enforceSchemaVersion = ${component.master.enforceSchemaVersion}

[dbPortfolioMaster]
factory = com.opengamma.component.factory.master.DbPortfolioMasterComponentFactory
classifier = central
dbConnector = ::fin
jmsConnector = ::standard
jmsChangeManagerTopic = OpenGamma.MasterChange.PortfolioMaster.central-${og.cluster.name}
enforceSchemaVersion = ${component.master.enforceSchemaVersion}

[dbHtsMaster]
factory = com.opengamma.component.factory.master.DbHistoricalTimeSeriesMasterComponentFactory
classifier = central
dbConnector = ::hts
enforceSchemaVersion = ${component.master.enforceSchemaVersion}

[dbFunctionCosts]
factory = com.opengamma.component.factory.master.DbFunctionCostsMasterComponentFactory
classifier = central
dbConnector = ::fin
enforceSchemaVersion = ${component.master.enforceSchemaVersion}

[userSnapshotMaster]
factory = com.opengamma.component.factory.master.DbMarketDataSnapshotMasterComponentFactory
classifier = user
dbConnector = ::user
uniqueIdScheme = DbSnpUser
jmsConnector = ::standard
jmsChangeManagerTopic = OpenGamma.MasterChange.MarketDataSnapshotMaster.user-${og.cluster.name}
autoSchemaManagement = true

[userSecurityMaster]
factory = com.opengamma.component.factory.master.DbSecurityMasterComponentFactory
classifier = user
dbConnector = ::user
uniqueIdScheme = DbSecUser
cacheManager = ::standard
autoSchemaManagement = true

[userPositionMaster]
factory = com.opengamma.component.factory.master.DbPositionMasterComponentFactory
classifier = user
dbConnector = ::user
uniqueIdScheme = DbPosUser
autoSchemaManagement = true

[userPortfolioMaster]
factory = com.opengamma.component.factory.master.DbPortfolioMasterComponentFactory
classifier = user
dbConnector = ::user
uniqueIdScheme = DbPrtUser
autoSchemaManagement = true

[userConfigMaster]
factory = com.opengamma.component.factory.master.InMemoryConfigMasterComponentFactory
classifier = user

[combinedPositionMaster]
factory = com.opengamma.component.factory.master.CombinedPositionMasterComponentFactory
classifier = combined
defaultPositionMaster = ::central
positionMaster0 = PositionMaster::user

#============================================================================
# Data loaders

[securityLoader]
factory = com.opengamma.component.factory.loader.SecurityLoaderComponentFactory
classifier = standard
securityMaster = ::central
securityProvider = ::bloomberg

[historicalTimeSeriesLoader]
factory = com.opengamma.bbg.component.BloombergHistoricalTimeSeriesLoaderComponentFactory
classifier = standard
historicalTimeSeriesMaster = ::central
historicalTimeSeriesProvider = ::bloomberg
referenceDataProvider = ::bloomberg

#============================================================================
# System communication

[configSource]
factory = com.opengamma.component.factory.source.UserFinancialConfigSourceComponentFactory
classifier = combined
underlyingClassifier = shared
underlyingConfigMaster = ::central
userClassifier = user
userConfigMaster = ::user
cacheManager = ::standard

[exchangeSource]
factory = com.opengamma.component.factory.source.ExchangeSourceComponentFactory
classifier = shared
exchangeMaster = ::central
cacheManager = ::standard

[holidaySource]
factory = com.opengamma.component.factory.source.HolidaySourceComponentFactory
classifier = shared
holidayMaster = ::central

[regionSource]
factory = com.opengamma.component.factory.source.RegionSourceComponentFactory
classifier = shared
regionMaster = ::central
cacheManager = ::standard

[legalEntitySource]
factory = com.opengamma.component.factory.source.LegalEntitySourceComponentFactory
classifier = shared
legalEntityMaster = ::central

[snapshotSource]
factory = com.opengamma.component.factory.source.UserFinancialMarketDataSnapshotSourceComponentFactory
classifier = combined
underlyingClassifier = shared
underlyingMarketDataSnapshotMaster = ::central
userClassifier = user
userMarketDataSnapshotMaster = ::user

[securitySource]
factory = com.opengamma.component.factory.source.UserFinancialSecuritySourceComponentFactory
classifier = combined
underlyingClassifier = shared
underlyingSecurityMaster = ::central
userClassifier = user
userSecurityMaster = ::user
cacheManager = ::standard

[positionSource]
factory = com.opengamma.component.factory.source.UserFinancialPositionSourceComponentFactory
classifier = combined
underlyingClassifier = shared
underlyingPositionMaster = ::central
underlyingPortfolioMaster = ::central
userClassifier = user
userPositionMaster = ::user
userPortfolioMaster = ::user
cacheManager = ::standard

[tempTargets]
factory = com.opengamma.component.factory.source.TempTargetRepositoryComponentFactory
classifier = shared
path = ${temptarget.path}

[historicalTimeSeriesSource]
factory = com.opengamma.component.factory.source.HistoricalTimeSeriesSourceComponentFactory
classifier = shared
historicalTimeSeriesMaster = ::central
configSource = ::shared
cacheManager = ::standard

[currencyMatrixSource]
factory = com.opengamma.component.factory.source.CurrencyMatrixSourceComponentFactory
classifier = shared
configSource = ::shared

[currencyPairsSource]
factory = com.opengamma.component.factory.source.CurrencyPairsSourceComponentFactory
classifier = shared
configSource = ::shared

[interpolatedYieldCurveSpecificationBuilder]
factory = com.opengamma.component.factory.source.InterpolatedYieldCurveSpecificationBuilderComponentFactory
classifier = shared
configSource = ::shared

[curveSpecificationBuilder]
factory = com.opengamma.component.factory.source.CurveSpecificationBuilderComponentFactory
classifier = shared
configSource = ::shared

[interpolatedYieldCurveDefinitionSource]
factory = com.opengamma.component.factory.source.UserFinancialInterpolatedYieldCurveDefinitionSourceComponentFactory
classifier = combined
underlyingClassifier = shared
underlyingConfigSource = ::shared
userClassifier = user
cacheManager = ::standard

[volatilityCubeDefinitionSource]
factory = com.opengamma.component.factory.source.VolatilityCubeDefinitionSourceComponentFactory
classifier = combined
configSource = ::shared

[conventionBundleSource]
factory = com.opengamma.component.factory.source.ConventionBundleSourceComponentFactory
classifier = shared

[conventionSource]
factory = com.opengamma.component.factory.source.ConventionSourceComponentFactory
classifier = shared
conventionMaster = ::central
cacheManager = ::standard

[functionConfigurationSource]
factory = ${function.config.source}
classifier = shared
configMaster = ::central

[targetResolver]
factory = com.opengamma.component.factory.engine.TargetResolverComponentFactory
classifier = combined
positionSource = ::combined
securitySource = ::combined
tempTargets = ::shared
cacheManager = ::standard
currencyMatrixSource = ::shared
configSource = ::shared

#============================================================================
# Market data

[marketData]
factory =  com.opengamma.component.factory.livedata.LiveMarketDataProviderFactoryComponentFactory
classifier = main
jmsConnector = ::standard
defaultProviders = Bloomberg

[marketDataProviderResolver]
factory = com.opengamma.component.factory.engine.MarketDataProviderResolverComponentFactory
classifier = standard
liveMarketDataProviderFactory = ::main
historicalTimeSeriesSource = ::shared
historicalTimeSeriesResolver = ::shared
marketDataSnapshotSource = ::combined

#============================================================================
# Engine

[engineContexts]
factory = com.opengamma.component.factory.engine.EngineContextsComponentFactory
classifier = main
configSource = ::shared
configMaster = ::user
securitySource = ::combined
positionSource = ::combined
targetResolver = ::combined
regionSource = ::shared
legalEntitySource = ::shared
conventionBundleSource = ::shared
interpolatedYieldCurveDefinitionSource = ::combined
interpolatedYieldCurveSpecificationBuilder = ::shared
volatilityCubeDefinitionSource = ::combined
holidaySource = ::shared
exchangeSource = ::shared
historicalTimeSeriesSource = ::shared
historicalTimeSeriesResolver = ::shared
tempTargetRepository = ::shared
conventionSource = ::shared
permissive = true

[dbBatchMaster]
factory = com.opengamma.component.factory.master.DbBatchMasterComponentFactory
classifier = shared
dbConnector = ::bat
computationTargetResolver = ::combined
enforceSchemaVersion = ${component.master.enforceSchemaVersion}

[financialUserManager]
factory = com.opengamma.component.factory.engine.FinancialUserManagerComponentFactory
classifier = main
securityMaster = ::user
positionMaster = ::user
portfolioMaster = ::user
snapshotMaster = ::user
configMaster = ::user
yieldCurveDefinitionMaster = ::user
scheduler = ::standard
clientTimeOut = PT30M

[viewProcessor]
factory = com.opengamma.component.factory.engine.SpringViewProcessorComponentFactory
springFile = classpath:fullstack/fullstack-viewprocessor-spring.xml
propertiesFile = MANAGER.PROPERTIES
classifier = main
jmsConnector = ::standard
scheduler = ::standard
volatilityCubeDefinitionSource = ::combined
marketDataProviderResolver = ::standard
jmsBrokerUri = ${activeMQ.brokerURL}
jmsMarketDataAvailabilityTopic = ${livedata.availability.topic}

[dependencyGraphTraceProvider]
factory = com.opengamma.component.factory.provider.LocalDependencyGraphTraceProviderFactory
classifier = main
compiledFunctionService = ::main
functionResolver = ::main
functionExclusionGroups = ::main
marketDataProviderResolver = ::standard

[defaultConfiguration]
factory = com.opengamma.component.factory.engine.EngineConfigurationComponentFactory
classifier = default
description = Default OpenGamma installation
securityMaster = SecurityMaster::central
positionMaster = PositionMaster::central
portfolioMaster = PortfolioMaster::central
marketDataSnapshotMaster = MarketDataSnapshotMaster::central
historicalTimeSeriesMaster = HistoricalTimeSeriesMaster::central
configMaster = ConfigMaster::central
configSource = ConfigSource::shared
exchangeSource = ExchangeSource::shared
holidaySource = HolidaySource::shared
regionSource = RegionSource::shared
securitySource = SecuritySource::combined
positionSource = PositionSource::combined
marketDataSnapshotSource = MarketDataSnapshotSource::combined
historicalTimeSeriesSource = HistoricalTimeSeriesSource::shared
historicalTimeSeriesResolver = HistoricalTimeSeriesResolver::shared
currencyMatrixSource = CurrencyMatrixSource::shared
currencyPairsSource = CurrencyPairsSource::shared
curveSpecificationBuilder = CurveSpecificationBuilder::shared
interpolatedYieldCurveDefinitionSource = InterpolatedYieldCurveDefinitionSource::combined
interpolatedYieldCurveSpecificationBuilder = InterpolatedYieldCurveSpecificationBuilder::shared
volatilityCubeDefinitionSource = VolatilityCubeDefinitionSource::combined
functionRepositoryConfiguration = FunctionConfigurationSource::shared
userData = FinancialUserManager::main
remoteCalcNode = CalcNodeSocketConfiguration::main
availableOutputs = AvailableOutputsProvider::main
viewProcessor = ViewProcessor::main
activeMQ = ${activeMQ.brokerURL}
liveDataClient.subscriptionTopic = ${liveDataClient.subscriptionTopic}
liveDataClient.entitlementTopic = ${liveDataClient.entitlementTopic}
liveDataClient.heartbeatTopic = ${liveDataClient.heartbeatTopic}
conventionBundleSource = ConventionBundleSource::shared
conventionSource = ConventionSource::shared
legalEntitySource = LegalEntitySource::shared

[tests]
factory = com.opengamma.component.factory.test.TestsComponentFactory
enableSecurities = ${tests.createSecurityMaster}
enableSnapshots = ${tests.createSnapshotMaster}
enableYieldCurves = ${tests.createInterpolatedYieldCurveDefinitionMaster}

#============================================================================
# Jetty

[freemarker]
factory = com.opengamma.component.factory.web.FreemarkerConfigurationComponentFactory
templateLocations = ${freemarker.template.locations}

[webBasics]
factory = com.opengamma.component.factory.web.WebsiteBasicsComponentFactory
configMaster = ::central
exchangeMaster = ::central
holidayMaster = ::central
regionMaster = ::central
securityMaster = ::central
securitySource = ::shared
securityLoader = ::standard
conventionMaster = ::central
positionMaster = ::combined
portfolioMaster = ::central
batchMaster = ::shared
historicalTimeSeriesMaster = ::central
historicalTimeSeriesSource = ::shared
historicalTimeSeriesLoader = ::standard
scheduler = ::standard
legalEntityMaster = ::central
marketDataSnapshotMaster  = ::central
liveMarketDataProviderFactory = ::main
viewProcessor = ::main
computationTargetResolver = ::combined
volatilityCubeDefinitionSource = ::combined
functionConfigurationSource = ::shared

[webBundle]
factory = com.opengamma.component.factory.web.WebsiteBundleComponentFactory
deployMode = ${component.webBundle.deployMode}
baseDir = prototype
cacheManager = ::standard

[webAnalytics]
factory = com.opengamma.component.factory.web.WebsiteViewportsComponentFactory
configMaster = ::central
securityMaster = ::central
securitySource = ::combined
positionMaster = ::central
portfolioMaster = ::central
positionSource = ::combined
computationTargetResolver = ::combined
functions = ::shared
historicalTimeSeriesMaster = ::central
legalEntityMaster = ::central
userPositionMaster = ::user
userPortfolioMaster = ::user
userConfigMaster = ::user
combinedConfigSource = ::combined
viewProcessor = ::main
portfolioAggregationFunctions = ::main
marketDataSnapshotMaster = ::central
liveMarketDataProviderFactory = ::main
user = ::main

[jetty]
factory = com.opengamma.component.factory.EmbeddedJettyComponentFactory
resourceBase = ${jetty.resourceBase}
port = ${jetty.port}
securePort = ${jetty.securePort}

[toolContext]
factory = com.opengamma.component.factory.tool.ToolContextComponentFactory
classifier = tool
configMaster = ::central
exchangeMaster = ::central
holidayMaster = ::central
regionMaster = ::central
securityMaster = ::central
positionMaster = ::central
portfolioMaster = ::central
legalEntityMaster = ::central
marketDataSnapshotMaster = ::central
historicalTimeSeriesMaster = ::central
configSource = ::shared
exchangeSource = ::shared
holidaySource = ::shared
regionSource = ::shared
securitySource = ::shared
positionSource = ::shared
legalEntitySource = ::shared
marketDataSnapshotSource = ::shared
historicalTimeSeriesSource = ::shared
conventionBundleSource = ::shared
conventionSource = ::shared
conventionMaster = ::central
securityLoader = ::standard
viewProcessor = ::main
