# Configuration to setup the features needed for OpenGamma command line tools
# The ComponentManager class will load each INI block in turn and run any specified factory
# The other properties in each block are the arguments to the factory
# Processing occurs strictly from top to bottom with no back-references
# The goal is for most of the glue code to be specified here and in Java code, not XML

[global]
timeZone = Europe/London

[infrastructure]
factory = com.opengamma.component.factory.SpringInfrastructureComponentFactory
springFile = classpath:toolcontext-remote/toolcontext-infrastructure.xml
propertiesFile = MANAGER.PROPERTIES

#============================================================================
[remoteMasters]
factory = com.opengamma.component.factory.master.RemoteMastersComponentFactory
baseUri = ${component.remoteMasters.baseUri}

[remoteProviders]
factory = com.opengamma.component.factory.provider.RemoteProvidersComponentFactory
baseUri = ${component.remoteProviders.baseUri}

[viewProcessor]
factory = com.opengamma.component.factory.engine.RemoteViewProcessorComponentFactory
baseUri = ${component.remoteMasters.baseUri}
jmsConnector = ::standard

#============================================================================
[securityLoader]
factory = com.opengamma.examples.simulated.component.ExampleSecurityLoaderComponentFactory
classifier = tool

[conventionBundleSource]
factory = com.opengamma.examples.simulated.component.ExampleConventionBundleSourceComponentFactory
classifier = tool

#============================================================================
[configSource]
factory = com.opengamma.component.factory.source.ConfigSourceComponentFactory
classifier = tool
configMaster = ::central

[exchangeSource]
factory = com.opengamma.component.factory.source.ExchangeSourceComponentFactory
classifier = tool
exchangeMaster = ::central

[holidaySource]
factory = com.opengamma.component.factory.source.HolidaySourceComponentFactory
classifier = tool
holidayMaster = ::central

[regionSource]
factory = com.opengamma.component.factory.source.RegionSourceComponentFactory
classifier = tool
regionMaster = ::central

[securitySource]
factory = com.opengamma.component.factory.source.SecuritySourceComponentFactory
classifier = tool
securityMaster = ::central

[conventionSource]
factory = com.opengamma.component.factory.source.ConventionSourceComponentFactory
classifier = tool
conventionMaster = ::central

[legalEntitySource]
factory = com.opengamma.component.factory.source.LegalEntitySourceComponentFactory
classifier = tool
legalEntityMaster = ::central

[positionSource]
factory = com.opengamma.component.factory.source.PositionSourceComponentFactory
classifier = tool
positionMaster = ::central
portfolioMaster = ::central

[snapshotSource]
factory = com.opengamma.component.factory.source.MarketDataSnapshotSourceComponentFactory
classifier = tool
marketDataSnapshotMaster = ::central

[htsSource]
factory = com.opengamma.examples.simulated.component.ExampleHistoricalTimeSeriesSourceComponentFactory
classifier = tool
historicalTimeSeriesMaster = ::central
configSource = ::tool
cacheManager = ::standard

#============================================================================
[toolContext]
factory = com.opengamma.component.factory.tool.ToolContextComponentFactory
classifier = tool
configMaster = ::central
exchangeMaster = ::central
holidayMaster = ::central
regionMaster = ::central
securityMaster = ::central
positionMaster = ::central
portfolioMaster = ::central
legalEntityMaster = ::central
marketDataSnapshotMaster = ::central
historicalTimeSeriesMaster = ::central
legalEntityMaster = ::central
configSource = ::tool
exchangeSource = ::tool
holidaySource = ::tool
regionSource = ::tool
securitySource = ::tool
positionSource = ::tool
legalEntitySource = ::tool
marketDataSnapshotSource = ::tool
historicalTimeSeriesSource = ::tool
conventionBundleSource = ::tool
conventionSource = ::tool
#conventionMaster = ::tool
securityLoader = ::tool
viewProcessor = ::main

[engineContexts]
factory = com.opengamma.component.factory.engine.RemoteEngineContextsComponentFactory
configuration = ${component.remoteContexts.baseUri}
classifier = main
strict = true
cacheManager = ::standard
jmsConnector = ::standard
permissive = false
# TODO: Need to set the following properly
ignorePnlRequirementsGatherer = true
ignoreRiskFactorsGatherer = true
