# Runs an OpenGamma server in the Example/mock data configuration.

[global]
time.zone = Europe/London

# Infrastructure

[infrastructure]
factory = com.opengamma.component.factory.SpringInfrastructureComponentFactory
springFile = classpath:fullstack/fullstack-examplessimulated-infrastructure-spring.xml
propertiesFile = MANAGER.PROPERTIES

[activeMQ]
factory = com.opengamma.component.factory.SpringActiveMqComponentFactory
springFile = classpath:fullstack/fullstack-examplessimulated-activemq-spring.xml
propertiesFile = MANAGER.PROPERTIES

# Database

[dbConfigMaster]
factory = com.opengamma.component.factory.master.DbConfigMasterComponentFactory
classifier = central
dbConnector = ::cfg

[dbExchangeMaster]
factory = com.opengamma.component.factory.master.DbExchangeMasterComponentFactory
classifier = central
dbConnector = ::exg

[dbHolidayMaster]
factory = com.opengamma.component.factory.master.DbHolidayMasterComponentFactory
classifier = central
dbConnector = ::hol

[memRegionMaster]
factory = com.opengamma.component.factory.master.InMemoryRegionMasterComponentFactory
classifier = central

[dbSnapshotMaster]
factory = com.opengamma.component.factory.master.DbMarketDataSnapshotMasterComponentFactory
classifier = central
dbConnector = ::snp
jmsConnector = ::snp
jmsChangeManagerTopic = OpenGamma.MasterChange.MarketDataSnapshotMaster.central-${og.cluster.name}

[dbSecurityMaster]
factory = com.opengamma.component.factory.master.DbSecurityMasterComponentFactory
classifier = central
dbConnector = ::sec
cacheManager = ::sec

[dbConventionMaster]
factory = com.opengamma.component.factory.master.DbConventionMasterComponentFactory
classifier = central
dbConnector = ::cnv

[dbOrganizationMaster]
factory = com.opengamma.component.factory.master.DbOrganizationMasterComponentFactory
classifier = central
dbConnector = ::org

[dbPositionMaster]
factory = com.opengamma.component.factory.master.DbPositionMasterComponentFactory
classifier = central
dbConnector = ::pos

[dbPortfolioMaster]
factory = com.opengamma.component.factory.master.DbPortfolioMasterComponentFactory
classifier = central
dbConnector = ::prt
jmsConnector = ::prt
jmsChangeManagerTopic = OpenGamma.MasterChange.PortfolioMaster.central-${og.cluster.name}

[dbHtsMaster]
factory = com.opengamma.component.factory.master.DbHistoricalTimeSeriesMasterComponentFactory
classifier = central
dbConnector = ::hts

[dbFunctionCosts]
factory = com.opengamma.component.factory.master.DbFunctionCostsMasterComponentFactory
classifier = central
dbConnector = ::eng

[userSnapshotMaster]
factory = com.opengamma.component.factory.master.DbMarketDataSnapshotMasterComponentFactory
classifier = user
dbConnector = ::user
uniqueIdScheme = DbSnpUser
jmsConnector = ::snp
jmsChangeManagerTopic = OpenGamma.MasterChange.MarketDataSnapshotMaster.user-${og.cluster.name}
autoSchemaManagement = true

[userSecurityMaster]
factory = com.opengamma.component.factory.master.DbSecurityMasterComponentFactory
classifier = user
dbConnector = ::user
uniqueIdScheme = DbSecUser
cacheManager = ::sec
autoSchemaManagement = true

[userPositionMaster]
factory = com.opengamma.component.factory.master.DbPositionMasterComponentFactory
classifier = user
dbConnector = ::user
uniqueIdScheme = DbPosUser
autoSchemaManagement = true

[userPortfolioMaster]
factory = com.opengamma.component.factory.master.DbPortfolioMasterComponentFactory
classifier = user
dbConnector = ::user
uniqueIdScheme = DbPrtUser
autoSchemaManagement = true

[userConfigMaster]
factory = com.opengamma.component.factory.master.InMemoryConfigMasterComponentFactory
classifier = user

[combinedPositionMaster]
factory = com.opengamma.component.factory.master.CombinedPositionMasterComponentFactory
classifier = combined
underlyingPositionMaster = ::central
userPositionMaster = ::user

# Simulated data

[exampleLiveDataServer]
factory = com.opengamma.examples.simulated.component.ExampleLiveDataServerComponentFactory
classifier = simulated
simulatedData = ${livedata.example.file}
jmsConnector = ::standard
jmsSubscriptionTopic = ${livedata.example.subscription.topic}
jmsEntitlementTopic = ${livedata.example.entitlement.topic}
jmsHeartbeatTopic = ${livedata.example.heartbeat.topic}
cacheManager = ::standard

# Data loaders

[securityLoader]
factory = com.opengamma.examples.simulated.component.ExampleSecurityLoaderComponentFactory
classifier = standard

[historicalTimeSeriesLoader]
factory = com.opengamma.examples.simulated.component.ExampleHistoricalTimeSeriesLoaderComponentFactory
classifier = standard

[portfolioUploadUnavailable]
factory = com.opengamma.examples.simulated.component.PortfolioLoaderUnavailableComponentFactory

# System communication

[configSource]
factory = com.opengamma.component.factory.source.UserFinancialConfigSourceComponentFactory
classifier = combined
underlyingClassifier = shared
underlyingConfigMaster = ::central
userClassifier = user
userConfigMaster = ::user
cacheManager = ::standard

[exchangeSource]
factory = com.opengamma.component.factory.source.ExchangeSourceComponentFactory
classifier = shared
exchangeMaster = ::central
cacheManager = ::standard

[holidaySource]
factory = com.opengamma.component.factory.source.HolidaySourceComponentFactory
classifier = shared
holidayMaster = ::central

[regionSource]
factory = com.opengamma.component.factory.source.RegionSourceComponentFactory
classifier = shared
regionMaster = ::central
cacheManager = ::standard

[organizationSource]
factory = com.opengamma.component.factory.source.OrganizationSourceComponentFactory
classifier = shared
organizationMaster = ::central

[snapshotSource]
factory = com.opengamma.component.factory.source.UserFinancialMarketDataSnapshotSourceComponentFactory
classifier = combined
underlyingClassifier = shared
underlyingMarketDataSnapshotMaster = ::central
userClassifier = user
userMarketDataSnapshotMaster = ::user

[securitySource]
factory = com.opengamma.component.factory.source.UserFinancialSecuritySourceComponentFactory
classifier = combined
underlyingClassifier = shared
underlyingSecurityMaster = ::central
userClassifier = user
userSecurityMaster = ::user
cacheManager = ::standard

[positionSource]
factory = com.opengamma.component.factory.source.UserFinancialPositionSourceComponentFactory
classifier = combined
underlyingClassifier = shared
underlyingPositionMaster = ::central
underlyingPortfolioMaster = ::central
userClassifier = user
userPositionMaster = ::user
userPortfolioMaster = ::user
cacheManager = ::standard

[tempTargets]
factory = com.opengamma.component.factory.source.TempTargetRepositoryComponentFactory
classifier = shared
path = ${temptarget.path}

[historicalTimeSeriesSource]
factory = com.opengamma.examples.simulated.component.ExampleHistoricalTimeSeriesSourceComponentFactory
classifier = shared
historicalTimeSeriesMaster = ::central
configSource = ::shared
cacheManager = ::standard

[currencyMatrixSource]
factory = com.opengamma.component.factory.source.CurrencyMatrixSourceComponentFactory
classifier = shared
configSource = ::shared

[currencyPairsSource]
factory = com.opengamma.component.factory.source.CurrencyPairsSourceComponentFactory
classifier = shared
configSource = ::shared

[interpolatedYieldCurveSpecificationBuilder]
factory = com.opengamma.component.factory.source.InterpolatedYieldCurveSpecificationBuilderComponentFactory
classifier = shared
configSource = ::shared

[curveSpecificationBuilder]
factory = com.opengamma.component.factory.source.CurveSpecificationBuilderComponentFactory
classifier = shared
configSource = ::shared

[interpolatedYieldCurveDefinitionSource]
factory = com.opengamma.component.factory.source.UserFinancialInterpolatedYieldCurveDefinitionSourceComponentFactory
classifier = combined
underlyingClassifier = shared
underlyingConfigSource = ::shared
userClassifier = user
cacheManager = ::standard

[volatilityCubeDefinitionSource]
factory = com.opengamma.examples.simulated.component.ExampleVolatilityCubeDefinitionSourceComponentFactory
classifier = combined
configSource = ::shared

[conventionBundleSource]
factory = com.opengamma.examples.simulated.component.ExampleConventionBundleSourceComponentFactory
classifier = shared

[conventionSource]
factory = com.opengamma.component.factory.source.ConventionSourceComponentFactory
classifier = shared
conventionMaster = ::central
cacheManager = ::standard

[functionConfigurationSource]
factory = com.opengamma.component.factory.source.DbFunctionConfigurationSourceComponentFactory
classifier = shared
configMaster = ::central
functionDefinitionName = EXAMPLE_FUNCTIONS

[targetResolver]
factory = com.opengamma.component.factory.engine.TargetResolverComponentFactory
classifier = combined
positionSource = ::combined
securitySource = ::combined
tempTargets = ::shared
cacheManager = ::standard
currencyMatrixSource = ::shared
configSource = ::shared

# Market data

[exampleMarketData]
factory = com.opengamma.examples.simulated.component.ExampleMarketDataComponentFactory
classifier = simulated
jmsConnector = ::standard
serverMetaDataProvider = ::simulated

[marketDataProviderResolver]
factory = com.opengamma.component.factory.engine.MarketDataProviderResolverComponentFactory
classifier = standard
liveMarketDataProviderFactory = ::simulated
historicalTimeSeriesSource = ::shared
historicalTimeSeriesResolver = ::shared
marketDataSnapshotSource = ::combined

# Engine

[engineContexts]
factory = com.opengamma.component.factory.engine.EngineContextsComponentFactory
classifier = main
configSource = ::shared
configMaster = ::user
securitySource = ::combined
positionSource = ::combined
targetResolver = ::combined
regionSource = ::shared
organizationSource = ::shared
conventionBundleSource = ::shared
interpolatedYieldCurveDefinitionSource = ::combined
interpolatedYieldCurveSpecificationBuilder = ::shared
volatilityCubeDefinitionSource = ::combined
holidaySource = ::shared
exchangeSource = ::shared
historicalTimeSeriesSource = ::shared
historicalTimeSeriesResolver = ::shared
tempTargetRepository = ::shared
conventionSource = ::shared
permissive = true

[dbBatchMaster]
factory = com.opengamma.component.factory.master.DbBatchMasterComponentFactory
classifier = shared
dbConnector = ::bat
computationTargetResolver = ::combined

[financialUserManager]
factory = com.opengamma.component.factory.engine.FinancialUserManagerComponentFactory
classifier = main
securityMaster = ::user
positionMaster = ::user
portfolioMaster = ::user
snapshotMaster = ::user
configMaster = ::user
yieldCurveDefinitionMaster = ::user
scheduler = ::standard
clientTimeOut = PT30M

[viewProcessor]
factory = com.opengamma.component.factory.engine.SpringViewProcessorComponentFactory
springFile = classpath:fullstack/fullstack-examplessimulated-viewprocessor-spring.xml
propertiesFile = MANAGER.PROPERTIES
classifier = main
jmsConnector = ::standard
scheduler = ::standard
volatilityCubeDefinitionSource = ::combined
marketDataProviderResolver = ::standard
jmsBrokerUri = ${activeMQ.brokerURL}
jmsMarketDataAvailabilityTopic = ${livedata.example.availability.topic}

[dependencyGraphTraceProvider]
factory = com.opengamma.component.factory.provider.LocalDependencyGraphTraceProviderFactory
classifier = main
compiledFunctionService = ::main
functionResolver = ::main
functionExclusionGroups = ::main
marketDataProviderResolver = ::standard

[defaultConfiguration]
factory = com.opengamma.component.factory.engine.EngineConfigurationComponentFactory
classifier = default
description = Default OpenGamma installation
securityMaster = SecurityMaster::central
positionMaster = PositionMaster::central
portfolioMaster = PortfolioMaster::central
marketDataSnapshotMaster = MarketDataSnapshotMaster::central
historicalTimeSeriesMaster = HistoricalTimeSeriesMaster::central
configMaster = ConfigMaster::central
configSource = ConfigSource::shared
exchangeSource = ExchangeSource::shared
holidaySource = HolidaySource::shared
regionSource = RegionSource::shared
securitySource = SecuritySource::combined
positionSource = PositionSource::combined
marketDataSnapshotSource = MarketDataSnapshotSource::combined
historicalTimeSeriesSource = HistoricalTimeSeriesSource::shared
historicalTimeSeriesResolver = HistoricalTimeSeriesResolver::shared
currencyMatrixSource = CurrencyMatrixSource::shared
currencyPairsSource = CurrencyPairsSource::shared
curveSpecificationBuilder = CurveSpecificationBuilder::shared
interpolatedYieldCurveDefinitionSource = InterpolatedYieldCurveDefinitionSource::combined
interpolatedYieldCurveSpecificationBuilder = InterpolatedYieldCurveSpecificationBuilder::shared
volatilityCubeDefinitionSource = VolatilityCubeDefinitionSource::combined
functionRepositoryConfiguration = FunctionConfigurationSource::shared
userData = FinancialUserManager::main
remoteCalcNode = CalcNodeSocketConfiguration::main
availableOutputs = AvailableOutputsProvider::main
viewProcessor = ViewProcessor::main
liveDataClient.subscriptionTopic = ${livedata.example.subscription.topic}
liveDataClient.entitlementTopic = ${livedata.example.entitlement.topic}
liveDataClient.heartbeatTopic = ${livedata.example.heartbeat.topic}
activeMQ = ActiveMQJmsConfiguration::main
conventionBundleSource = ConventionBundleSource::shared
conventionSource = ConventionSource::shared
organizationSource = OrganizationSource::shared

[tests]
factory = com.opengamma.component.factory.test.TestsComponentFactory
enableSecurities = ${tests.createSecurityMaster}
enableSnapshots = ${tests.createSnapshotMaster}
enableYieldCurves = ${tests.createInterpolatedYieldCurveDefinitionMaster}

# Jetty

[freemarker]
factory = com.opengamma.component.factory.web.FreemarkerConfigurationComponentFactory
templateLocations = ${freemarker.template.locations}

[webBasics]
factory = com.opengamma.component.factory.web.WebsiteBasicsComponentFactory
configMaster = ::central
exchangeMaster = ::central
holidayMaster = ::central
regionMaster = ::central
securityMaster = ::central
securitySource = ::shared
securityLoader = ::standard
conventionMaster = ::central
positionMaster = ::combined
portfolioMaster = ::central
batchMaster = ::shared
historicalTimeSeriesMaster = ::central
historicalTimeSeriesSource = ::shared
historicalTimeSeriesLoader = ::standard
scheduler = ::standard
organizationMaster = ::central
marketDataSnapshotMaster  = ::central
marketDataSpecificationRepository = ::simulated
viewProcessor = ::main
computationTargetResolver = ::combined
volatilityCubeDefinitionSource = ::combined
functionConfigurationSource = ::shared


[webBundle]
factory = com.opengamma.component.factory.web.WebsiteBundleComponentFactory
deployMode = ${component.webBundle.deployMode}
baseDir = prototype
cacheManager = ::standard

[webAnalytics]
factory = com.opengamma.component.factory.web.WebsiteViewportsComponentFactory
configMaster = ::central
securityMaster = ::central
securitySource = ::combined
positionMaster = ::central
portfolioMaster = ::central
positionSource = ::combined
computationTargetResolver = ::combined
functions = ::shared
historicalTimeSeriesMaster = ::central
organizationMaster = ::central
userPositionMaster = ::user
userPortfolioMaster = ::user
userConfigMaster = ::user
combinedConfigSource = ::combined
viewProcessor = ::main
portfolioAggregationFunctions = ::main
# TODO should this be ::user or ::central? or does there need to be a combined master? or is there already?
marketDataSnapshotMaster = ::central
marketDataSpecificationRepository = ::simulated
user = ::main

[jetty]
factory = com.opengamma.component.factory.EmbeddedJettyComponentFactory
resourceBase = ${jetty.resourceBase}
port = ${jetty.port}
securePort = ${jetty.securePort}
